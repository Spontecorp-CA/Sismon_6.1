package com.sismon.vista;

import com.sismon.controller.Arranque;
import com.sismon.vista.utilities.SismonLog;
import java.awt.Color;
import java.awt.Toolkit;
import java.util.logging.Level;
import javax.swing.ImageIcon;

/**
 *
 * @author jgcastillo
 */
public class SplashFrame extends javax.swing.JFrame {

    private int auxiliar = 0;
    private boolean realizado = false;
    private Hilo ejecutar;
    
    private static final SismonLog sismonlog = SismonLog.getInstance();
    private final ImageIcon icon = new ImageIcon(Toolkit.getDefaultToolkit()
            .getImage(getClass().getResource("/resources/LogoSismonInferior.png")));
    
    /**
     * Creates new form SplashFrame
     */
    public SplashFrame() {
        initComponents();
        setIconImage(icon.getImage());
        init();
        ejecutar = new Hilo();
    }
    
    private void init(){
        this.getRootPane().setOpaque(false);
        this.getContentPane().setBackground(new Color(0, 0, 0, 0));
        this.setBackground(new Color(0, 0, 0, 0));
        this.setResizable(false);
        this.setLocationRelativeTo(this);
        
        Arranque arranque = new Arranque();
        Thread thread = new Thread(arranque);
        thread.start();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        progressBar = new javax.swing.JProgressBar();
        messageLabel = new javax.swing.JLabel();
        imageLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(progressBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 210, 20));

        messageLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        messageLabel.setForeground(new java.awt.Color(0, 0, 255));
        getContentPane().add(messageLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 190, -1));

        imageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/LogoSismonSplash.png"))); // NOI18N
        getContentPane().add(imageLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 240));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        if (realizado == false) {
            realizado = true;
            progressBar.setMaximum(49);
            progressBar.setMinimum(0);
            progressBar.setStringPainted(true);
            ejecutar.start();
        }
    }//GEN-LAST:event_formWindowActivated

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SplashFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SplashFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SplashFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SplashFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new SplashFrame().setVisible(true);
            }
        });
    }
    
    private class Hilo extends Thread {
        @Override
        public void run() {
            try {
                while (true) {
                    auxiliar++;
                    progressBar.setValue(auxiliar);
                    repaint();
                    switch (auxiliar) {
                        case 3:
                            messageLabel.setText("Iniciando ...");
                            break;
                        case 20:
                            messageLabel.setText("Abriendo base de datos");
                            break;
                        case 50:
                            messageLabel.setText("Procesando...");
                            break;
                        case 60:
                            java.awt.EventQueue.invokeLater(() -> {
                            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
                            /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
                            * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
                            */
                            try {
                                for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                                    if ("Windows".equals(info.getName())) {
                                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                                        break;
                                    }
                                }
                            } catch (ClassNotFoundException ex) {
                                java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                            } catch (InstantiationException ex) {
                                java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                            } catch (IllegalAccessException ex) {
                                java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                            } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                                java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                            }
//</editor-fold>
                                new MainFrame().setVisible(true);
                            });
                            SplashFrame.this.dispose();
                            break;
                    }
                    Thread.sleep(100);
                }
            } catch (InterruptedException ex) {
                sismonlog.logger.log(Level.SEVERE, null, ex);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel imageLabel;
    private javax.swing.JLabel messageLabel;
    private javax.swing.JProgressBar progressBar;
    // End of variables declaration//GEN-END:variables
}
