package com.sismon.vista.configuracion;

import com.sismon.controller.Constantes;
import com.sismon.jpamanager.DistritoManager;
import com.sismon.jpamanager.DivisionManager;
import com.sismon.jpamanager.EmpresaManager;
import com.sismon.model.Distrito;
import com.sismon.model.Division;
import com.sismon.model.Empresa;
import com.sismon.vista.Contexto;
import com.sismon.vista.utilities.SismonLog;
import java.awt.Toolkit;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

public class ConfiguraDistritoIF extends javax.swing.JInternalFrame {

    private static ConfiguraDistritoIF instance = null;
    private final DivisionManager divisionManager;
    private final DistritoManager distritoManager;
    private final EmpresaManager empresaManager;

    private Distrito distrito;
    private Empresa empresa;
    private boolean changeOk = true;

    private static final SismonLog sismonlog = SismonLog.getInstance();
    private final ImageIcon icon = new ImageIcon(Toolkit.getDefaultToolkit()
            .getImage(getClass().getResource("/resources/IconSismon.png")));

    /**
     * Creates new form ConfiguraDistritoIF
     */
    private ConfiguraDistritoIF() {
        initComponents();
        setTitle("Configuración de Distrito / Empresa Mixta");
        setFrameIcon(icon);

        this.distritoManager = new DistritoManager();
        this.empresaManager = new EmpresaManager();
        this.divisionManager = new DivisionManager();
    }

    public static ConfiguraDistritoIF getInstance() {
        if (instance == null) {
            instance = new ConfiguraDistritoIF();
        }
        return instance;
    }

    private void init() {
        fillDivisionComboBox();
        if (!verifyData()) {
            clearFrom();
            enableButtons(false);
        } else {
            guardarButton.setEnabled(false);
        }
    }

    private void configureComponentListeners() {
        distritoTextField.getDocument().addDocumentListener(docListener);
        empresaTextField.getDocument().addDocumentListener(docListener);
    }

    private void removeComponentListeners() {
        distritoTextField.getDocument().removeDocumentListener(docListener);
        empresaTextField.getDocument().removeDocumentListener(docListener);
    }

    private void enableButtons(boolean enable) {
        guardarButton.setEnabled(enable);
    }

    private void modify() {
        enableButtons(true);
    }
    
    private void fillDivisionComboBox() {
        List<Division> divisiones = divisionManager.findAll();
        Object[] items = new Object[divisiones.size() + 1];
        items[0] = "Seleccione...";
        int i = 1;
        for (Division div : divisiones) {
            items[i] = div;
            i++;
        }
        DefaultComboBoxModel model = new DefaultComboBoxModel(items);
        divisionComboBox.setModel(model);
    }

    private boolean verifyFields() {
        boolean verifiedDiv = false;
        boolean verifiedDist = false;
        if (divisionComboBox.getSelectedItem() instanceof Division) {
            verifiedDiv = true;
        }

        if (!distritoTextField.getText().isEmpty()) {
            verifiedDist = true;
        }

        return verifiedDiv && verifiedDist;
    }

    private boolean verifyData() {
        boolean verifiedDist = false;
        boolean verifiedEmp = false;
        List<Distrito> distritos = distritoManager.findAll();
        List<Empresa> empresas = empresaManager.findAll();
        if (!distritos.isEmpty()) {
            distrito = distritos.get(0);
            distritoTextField.setText(distrito.getNombre());
            divisionComboBox.setSelectedItem(distrito.getDivisionId());
            verifiedDist = true;
        }
        if (!empresas.isEmpty()) {
            empresa = empresas.get(0);
            empresaTextField.setText(empresa.getNombre());
            verifiedEmp = true;
        }
        return verifiedDist && verifiedEmp;
    }

    private void clearFrom() {
        divisionComboBox.setSelectedIndex(0);
        distritoTextField.setText(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        toolBar = new javax.swing.JToolBar();
        guardarButton = new javax.swing.JButton();
        backPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        divisionComboBox = new javax.swing.JComboBox();
        distritoTextField = new javax.swing.JTextField();
        empresaTextField = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                onActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
                onDeactivated(evt);
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        toolBar.setFloatable(false);
        toolBar.setRollover(true);

        guardarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/iconguardar26.png"))); // NOI18N
        guardarButton.setText("Guardar");
        guardarButton.setFocusable(false);
        guardarButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        guardarButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        guardarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarButtonActionPerformed(evt);
            }
        });
        toolBar.add(guardarButton);

        backPanel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("División:");

        jLabel2.setText("Distrito:");

        jLabel3.setText("Empresa:");

        javax.swing.GroupLayout backPanelLayout = new javax.swing.GroupLayout(backPanel);
        backPanel.setLayout(backPanelLayout);
        backPanelLayout.setHorizontalGroup(
            backPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(backPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(12, 12, 12))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backPanelLayout.createSequentialGroup()
                        .addGroup(backPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)))
                .addGroup(backPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(distritoTextField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(divisionComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 206, Short.MAX_VALUE)
                    .addComponent(empresaTextField))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        backPanelLayout.setVerticalGroup(
            backPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(backPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(divisionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(backPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(distritoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(backPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(empresaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(toolBar, javax.swing.GroupLayout.DEFAULT_SIZE, 334, Short.MAX_VALUE)
            .addComponent(backPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(toolBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(backPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void guardarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarButtonActionPerformed
        if (verifyFields()) {
            if (!distritoTextField.getText().isEmpty()) {
                distrito = new Distrito();
                distrito.setNombre(distritoTextField.getText().toUpperCase());
                distrito.setDivisionId((Division) divisionComboBox.getSelectedItem());

                distritoManager.create(distrito);

                if (!empresaTextField.getText().isEmpty()) {
                    distrito = distritoManager.find(distrito.getNombre());
                    empresa = new Empresa();
                    empresa.setNombre(empresaTextField.getText().toUpperCase());
                    empresa.setDivisionId((Division) divisionComboBox.getSelectedItem());
                    empresa.setDistritoId(distrito);
                    empresaManager.create(empresa);
                }
                Contexto.showMessage("Distrito / Empresa Mixta creada", Constantes.MENSAJE_INFO);
                changeOk = false;
                verifyData();
                enableButtons(false);
                changeOk = true;
            } else {
                Contexto.showMessage("Debe indicar la División y/o el Distrito", Constantes.MENSAJE_ERROR);
            }
        } else {
            Contexto.showMessage("Debe indicar la División y/o Distrito", Constantes.MENSAJE_ERROR);
        }
    }//GEN-LAST:event_guardarButtonActionPerformed

    private void onDeactivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_onDeactivated
        Contexto.showMessage("", Constantes.MENSAJE_CLEAR);
        removeComponentListeners();
    }//GEN-LAST:event_onDeactivated

    private void onActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_onActivated
        changeOk = false;
        init();
        Contexto.setActiveFrame(instance);
        changeOk = true;
        configureComponentListeners();
    }//GEN-LAST:event_onActivated


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel backPanel;
    private javax.swing.JTextField distritoTextField;
    private javax.swing.JComboBox divisionComboBox;
    private javax.swing.JTextField empresaTextField;
    private javax.swing.JButton guardarButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JToolBar toolBar;
    // End of variables declaration//GEN-END:variables

    private final DocumentListener docListener = new DocumentListener() {

        @Override
        public void insertUpdate(DocumentEvent e) {
            if (changeOk) {
                modify();
            }
        }

        @Override
        public void removeUpdate(DocumentEvent e) {
            if (changeOk) {
                modify();
            }
        }

        @Override
        public void changedUpdate(DocumentEvent e) {
            if (changeOk) {
                modify();
            }
        }

    };

}
